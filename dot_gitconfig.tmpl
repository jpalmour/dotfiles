# --- Commit signing with SSH (via 1Password) ---
[gpg]
    format = ssh
{{- /* OS-specific path to op-ssh-sign */}}
{{- if eq .chezmoi.os "darwin" }}
    ssh.program = /Applications/1Password.app/Contents/MacOS/op-ssh-sign
{{- else if eq .chezmoi.os "linux" }}
    ssh.program = /opt/1Password/op-ssh-sign
{{- else if eq .chezmoi.os "windows" }}
    ssh.program = op-ssh-sign.exe
{{- else }}
    ssh.program = op-ssh-sign
{{- end }}

[commit]
    gpgSign = true

# Use the public key text from 1Password as the signing key
{{- if lookPath "op" }}
{{- $sshItem := onepasswordItemFields "Dev SSH Key" -}}
{{- $pub := index $sshItem "Public Key" -}}
{{- if not $pub }}{{ fail "‚ùå Could not read 'Public Key' field from 1Password item 'Dev SSH Key'.\n\nüìö Please follow the setup instructions in 1PASS_SETUP.md to create this item:\n   1. Run: op item create --category \"SSH Key\" --title \"Dev SSH Key\" --generate-password=\"ed25519\" --ssh-generate-key=\"ed25519:your-email@example.com\"\n   2. Add the public key to GitHub for both authentication and signing\n   3. Run 'chezmoi apply' again\n\nüîç To verify the item exists: op item get \"Dev SSH Key\" --fields \"public key\"" }}{{ end }}
[user]
    signingkey = {{ $pub }}
{{- else }}
# 1Password CLI not yet installed - signing key will be configured after setup
[user]
    signingkey = 
{{- end }}

# --- Platform niceties ---
{{- if eq .chezmoi.os "windows" }}
# Use Microsoft OpenSSH so 1Password‚Äôs agent works smoothly
[core]
    sshCommand = C:\\Windows\\System32\\OpenSSH\\ssh.exe
{{- end }}

[user]
    name = Joseph Palmour
    email = {{ if and .is_work_machine (ne .work_email ``) -}}{{ .work_email }}{{- else -}}{{ .personal_email }}{{- end }}
