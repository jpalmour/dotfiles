{{ if eq .chezmoi.os "darwin" -}}
#!/bin/sh
set -e
# ensure brew is in PATH
if [ -x /opt/homebrew/bin/brew ]; then
  eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ -x /usr/local/bin/brew ]; then
  eval "$(/usr/local/bin/brew shellenv)"
else
  echo "Homebrew is required" >&2
  exit 1
fi
if ! command -v 1password >/dev/null 2>&1; then
    brew install --cask 1password
fi
if ! command -v op >/dev/null 2>&1; then
    brew install 1password-cli
fi

# Verify versions
command -v 1password && 1password --version || true
command -v op && op --version || true

# --- prompt user to enable CLI integration and SSH agent --------------------
echo
echo " Opening 1Password…"
open -a "1Password" || true
echo " In 1Password, please enable these settings:"
echo "  1. Settings → Developer → ✅ 'Integrate with 1Password CLI'"
echo "  2. Settings → Developer → ✅ 'Use the SSH agent'"
echo
read -n 1 -s -r -p " Press any key when finished..."
echo
if op account list >/dev/null 2>&1; then
  echo " ✅ 1Password CLI is integrated."
else
  echo " ⚠️  'op account list' didn't succeed. 1Password CLI integration is necessary for machine setup."
  exit 1
fi

# Check for SSH key and offer to create if missing
echo " Checking for SSH key in 1Password..."
if ! op item get "Dev SSH Key" --fields "public key" >/dev/null 2>&1; then
  echo " ⚠️  SSH key 'Dev SSH Key' not found in 1Password."
  echo
  read -p " Would you like to create a new SSH key now? (y/N): " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo " Creating new Ed25519 SSH key..."
    creation_date=$(date -u +"%Y-%m-%d %H:%M:%S UTC")
    if op item create \
      --category "SSH Key" \
      --title "Dev SSH Key" \
      --ssh-generate-key ed25519 \
      "Creation Date[text]=${creation_date}" \
      "Purpose[text]=Development machine SSH authentication and Git signing" \
      >/dev/null 2>&1; then

      echo " ✅ SSH key created successfully!"
      echo
      echo " 🔑 Public key for GitHub:"
      echo "========================================================================="
      op item get "Dev SSH Key" --fields "public key"
      echo "========================================================================="
      echo
      echo " 📋 Next steps - Add this key to GitHub TWICE:"
      echo "  1. Go to https://github.com/settings/keys"
      echo "  2. Click 'New SSH key' → Add as 'Authentication Key'"
      echo "  3. Click 'New SSH key' again → Add as 'Signing Key'"
      echo
      read -n 1 -s -r -p " Press any key after adding the key to GitHub (both auth & signing)..."
      echo
    else
      echo " ❌ Failed to create SSH key. Please create it manually:"
      echo " Run: op item create --category \"SSH Key\" --title \"Dev SSH Key\" --ssh-generate-key ed25519"
    fi
  else
    echo " Skipping SSH key creation. You can create it manually later."
    echo " See 1PASS_SETUP.md for instructions."
  fi
else
  echo " ✅ SSH key 'Dev SSH Key' found in 1Password."
  creation_date=$(op item get "Dev SSH Key" --fields "Creation Date" 2>/dev/null || echo "")
  if [ -n "$creation_date" ]; then
    echo "    Created: ${creation_date}"
  fi
fi

# Check for ssh-hosts and offer to create if missing
echo " Checking for SSH hosts configuration..."
if ! op item get "ssh-hosts" --fields "hosts" >/dev/null 2>&1; then
  echo " ⚠️  SSH hosts configuration 'ssh-hosts' not found."
  echo
  read -p " Would you like to create it now? (y/N): " -n 1 -r
  echo
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    if op item create \
      --category "Secure Note" \
      --title "ssh-hosts" \
      "hosts=# Add your custom SSH host configurations here
# Example:
# Host myserver
#     HostName 192.168.1.100
#     User myuser
#     Port 22" \
      >/dev/null 2>&1; then
      echo " ✅ SSH hosts configuration created with template."
    else
      echo " ❌ Failed to create SSH hosts configuration."
    fi
  fi
else
  echo " ✅ SSH hosts configuration found in 1Password."
fi
{{ end -}}
